- alias: 'GMaps, Update Sensor H2MP'
  initial_state: 'on'
  trigger:
  - at: !secret update_gmaps_H2MP_time
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_fgm
    state: 'on'
  action:
  - service: sensor.google_travel_sensor_update
    data:
      entity_id: sensor.gmaps_home2meetingpoint


- alias: 'GMaps, Update Sensor MP2W'
  initial_state: 'on'
  trigger:
  - at: !secret update_gmaps_MP2W_time
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_fgm
    state: 'on'
  action:
  - service: sensor.google_travel_sensor_update
    data:
      entity_id: sensor.gmaps_meetingpoint2work


- alias: 'GMaps, Update Sensor W2MP'
  initial_state: 'on'
  trigger:
  - at: !secret update_gmaps_W2MP_time
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_fgm
    state: 'on'
  action:
  - service: sensor.google_travel_sensor_update
    data:
      entity_id: sensor.gmaps_work2meetingpoint


- alias: 'GMaps, Update Sensor MP2H'
  initial_state: 'on'
  trigger:
  - at: !secret update_gmaps_MP2H_time
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_fgm
    state: 'on'
  action:
  - service: sensor.google_travel_sensor_update
    data:
      entity_id: sensor.gmaps_meetingpoint2home


- alias: 'GMaps, Check Sensor H2MP'
  initial_state: 'on'
  trigger:
  - at: !secret check_gmaps_H2MP_time
    platform: time
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.gmaps_home2meetingpoint
      above: !secret H2MP_normal_time
    - condition: state
      entity_id: binary_sensor.workday_fgm
      state: 'on'
  action:
  - service: script.gmaps_notifier
    data_template:
      fahrtzeit: '{{ states.sensor.gmaps_home2meetingpoint.state }}'
      origin: '{{ state_attr(''sensor.gmaps_home2meetingpoint'', ''origin_addresses'')
        }}'
      destination: '{{ state_attr(''sensor.gmaps_home2meetingpoint'', ''destination_addresses'')
        }}'
      normal_time: !secret H2MP_normal_time
      to_recipient: me


- alias: 'GMaps, Check Sensor MP2W'
  initial_state: 'on'
  trigger:
  - at: !secret check_gmaps_MP2W_time
    platform: time
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.gmaps_meetingpoint2work
      above: !secret MP2W_normal_time
    - condition: state
      entity_id: binary_sensor.workday_fgm
      state: 'on'
  action:
  - service: script.gmaps_notifier
    data_template:
      fahrtzeit: '{{ states.sensor.gmaps_meetingpoint2work.state }}'
      origin: '{{ state_attr(''sensor.gmaps_meetingpoint2work'', ''origin_addresses'')
        }}'
      destination: '{{ state_attr(''sensor.gmaps_meetingpoint2work'', ''destination_addresses'')
        }}'
      normal_time: !secret MP2W_normal_time
      to_recipient: group


- alias: 'GMaps, Check Sensor W2MP'
  initial_state: 'on'
  trigger:
  - at: !secret check_gmaps_W2MP_time
    platform: time
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.gmaps_work2meetingpoint
      above: !secret W2MP_normal_time
    - condition: state
      entity_id: binary_sensor.workday_fgm
      state: 'on'
  action:
  - service: script.gmaps_notifier
    data_template:
      fahrtzeit: '{{ states.sensor.gmaps_work2meetingpoint.state }}'
      origin: '{{ state_attr(''sensor.gmaps_work2meetingpoint'', ''origin_addresses'')
        }}'
      destination: '{{ state_attr(''sensor.gmaps_work2meetingpoint'', ''destination_addresses'')
        }}'
      normal_time: !secret W2MP_normal_time
      to_recipient: group


- alias: 'GMaps, Check Sensor MP2H'
  initial_state: 'on'
  trigger:
  - at: !secret check_gmaps_MP2H_time
    platform: time
  condition:
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.gmaps_meetingpoint2home
      above: !secret MP2H_normal_time
    - condition: state
      entity_id: binary_sensor.workday_fgm
      state: 'on'
  action:
  - service: script.gmaps_notifier
    data_template:
      fahrtzeit: '{{ states.sensor.gmaps_meetingpoint2home.state }}'
      origin: '{{ state_attr(''sensor.gmaps_meetingpoint2home'', ''origin_addresses'')
        }}'
      destination: '{{ state_attr(''sensor.gmaps_meetingpoint2home'', ''destination_addresses'')
        }}'
      normal_time: !secret MP2H_normal_time
      to_recipient: me


- alias: 'Telegram Bot for GMaps, 2Work'
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /maps_work
  action:
  - service: automation.trigger
    entity_id: automation.gmaps_update_sensor_h2mp
  - service: automation.trigger
    entity_id: automation.gmaps_update_sensor_mp2w
  - service: automation.trigger
    entity_id: automation.gmaps_check_sensor_h2mp
  - service: automation.trigger
    entity_id: automation.gmaps_check_sensor_mp2w
  - service: notify.notify_me
    data:
      message: Bot successfully triggered, Work
      title: '*Bot triggered*'


- alias: 'Telegram Bot for GMaps, 2Home'
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /maps_home
  action:
  - service: automation.trigger
    entity_id: automation.gmaps_update_sensor_w2mp
  - service: automation.trigger
    entity_id: automation.gmaps_update_sensor_mp2h
  - service: automation.trigger
    entity_id: automation.gmaps_check_sensor_w2mp
  - service: automation.trigger
    entity_id: automation.gmaps_check_sensor_mp2h
  - service: notify.notify_me
    data:
      message: Bot successfully triggered, Home
      title: '*Bot triggered*'


- alias: 'Telegram Bot for all off'
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /all_off
  action:
  - service: light.turn_off
    entity_id: group.all_lights
  - service: switch.turn_off
    entity_id: group.all_switches


- alias: 'Telegram Bot Help'
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /help
  action:
  - service: notify.notify_me
    data:
      message: commands
      data:
        keyboard:
        - /all_off
        - /maps_home
        - /maps_work
        - /help
